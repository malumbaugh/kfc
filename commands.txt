LAB 1 commands
===========================================================
Task 7
docker network create gowebapp

docker run --net gowebapp --name gowebapp-mysql --hostname gowebapp-mysql -d -e \
MYSQL_ROOT_PASSWORD=mypassword gowebapp-mysql:v1

sleep 60 

docker run -p 9000:80 --net gowebapp -d --name gowebapp --hostname gowebapp gowebapp:v1


Task 10 
docker tag gowebapp:v1 sa-master-01.vclass.local:443/gowebapp:v1
docker tag gowebapp-mysql:v1 sa-master-01.vclass.local:443/gowebapp-mysql:v1

docker push sa-master-01.vclass.local:443/gowebapp:v1
docker push sa-master-01.vclass.local:443/gowebapp-mysql:v1


Lab 2 commands
=============================================================
Task 2
sudo kubeadm init --pod-network-cidr=10.10.0.0/16 \
--apiserver-advertise-address 172.20.10.31 | tee kubeadm.init.out

Task 3
kubectl apply -f https://github.com/antrea-io/antrea/releases/download/v1.1.0/antrea.yml

Lab 3 commands
=============================================================
Task 2
echo "source <(kubectl completion bash)" >> ~/.bash_profile


Lab 5 commands
=============================================================
kubectl apply -f gowebapp-new-deployment.yaml && sleep 2 && kubectl \ 
rollout pause deployment gowebapp

kubectl rollout resume deployment gowebapp && sleep 1 && kubectl get pods


Lab 7 commands
==============================================================
kubectl run test --image=sa-master-01.vclass.local:443/busyboxplus:curl -i --tty --rm

kubectl run test --namespace my-namespace \ 
--image=sa-master-01.vclass.local:443/busyboxplus:curl -i --tty --rm

Lab 8 commands
==============================================================
kubectl create configmap gowebapp \
--from-file=webapp-config-json=$HOME/gowebapp/gowebapp/config/config.json


Lab 9 commands
==============================================================
docker build -f Dockerfile-v2 -t gowebapp:v2 . 
docker tag gowebapp:v2 sa-master-01.vclass.local:443/gowebapp:v2
docker push sa-master-01.vclass.local:443/gowebapp:v2

kubectl create configmap gowebapp \
--from-file=webapp-config-json=$HOME/gowebapp/gowebapp/config/config.json 

kubectl create secret generic mysql --from-literal=password=mypassword


Lab 11 commands
==============================================================
kubectl run testpod -ti --image=sa-master-01.vclass.local:443/busybox:1 --rm /bin/sh
wget nginx --timeout 5 -O -



kubectl run testpod -ti --labels="lab=network" \
--image=sa-master-01.vclass.local:443/busybox:1 --rm /bin/sh


Lab 14 commands
==============================================================
velero install \
    --provider aws \
    --plugins velero/velero-plugin-for-aws:v1.2.0 \
    --bucket velero \
    --secret-file /home/ubuntu/credentials-velero \
    --use-volume-snapshots=false \
    --backup-location-config region=minio,s3ForcePathStyle="true",s3Url=http://minio.velero.svc:9000

